# -*- python -*-
# ex: set syntax=python:

########### need includes
import os.path
import sys

##########
# This is the dictionary that the buildmaster pays attention to. We also use a shorter alias to save typing.
# Create config variables
c = BuildmasterConfig = {}
c['schedulers'] = []
c['builders'] = []
c['services'] = []
c['www'] = []
buildbotdir = "/var/lib/buildbot/master/"

# Global config variables
c['buildbotNetUsageData'] = 'basic'
c['collapseRequests'] = True

####### include secrects which must not be in git
execfile(buildbotdir + "nogit_secrets.py")

####### Include master function includes 
#print os.path.relpath

#import master_includes
#from master_includes import *
execfile(buildbotdir + "master_includes.py")

# Set reference for config object into includes
lc = c

####### Exec BUILDWORKERS former BUILDSLAVES
execfile(buildbotdir + "nogit_master_workers.py")

# 'protocols' contains information about protocols which master will use for
# communicating with slaves. You must define at least 'port' option that slaves could connect to your master with this protocol.
c['protocols'] = {'pb': {'port': 9989}}

# ----------------------------------------------
####### CHANGESOURCES
# the 'change_source' setting tells the buildmaster how it should find out
# about source code changes.  Here we point to the buildbot clone of pyflakes.
# ----------------------------------------------

# ----------------------------------------------
####### SCHEDULERS
# Configure the Schedulers, which decide how to react to incoming changes.  In this
# case, just kick off a 'runtests' build

from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.schedulers.forcesched import ForceScheduler
from buildbot.changes import filter
from buildbot.plugins import schedulers, util

#Add rsyslog schedulers for main repo
# DONE in master_include_rsyslog.py NOW!
# appendSchedulers('rsyslog', 'rsyslog', 'master')
#

#Add liblognorm schedulers for main repo
appendSchedulers('rsyslog', 'liblognorm', 'master')

#Add rsyslog schedulers for main repo
appendSchedulers('rsyslog', 'liblogging', 'master')

#Add rsyslog schedulers for main repo
appendSchedulers('rsyslog', 'libfastjson', 'master')

#Add rsyslog schedulers for main repo
appendSchedulers('rsyslog', 'librelp', 'master')

#Add rsyslog schedulers for main repo
appendSchedulers('rsyslog', 'libestr', 'master')
# ----------------------------------------------

# ----------------------------------------------
####### BUILDERS
# The 'builders' list defines the Builders, which tell Buildbot how to perform a build:
# what steps, and which slaves can execute them.  Note that any particular build will
# only take place on one slave.
#
######## Include build factories
# Include / create rsyslog builders 
#execfile(buildbotdir + "master_include_rsyslog.py")
execfile(buildbotdir + "rsyslog_master_include.py")

# Include / create rsyslog-doc builders 
execfile(buildbotdir + "master_include_rsyslogdoc.py")

# Include / create liblognorm builders 
execfile(buildbotdir + "master_include_liblognorm.py")

# Include / create libfastjson builders 
execfile(buildbotdir + "master_include_libfastjson.py")

# Include / create liblogging builders 
execfile(buildbotdir + "master_include_liblogging.py")

# Include / create librelp builders 
execfile(buildbotdir + "master_include_librelp.py")

# Include / create libestr builders 
execfile(buildbotdir + "master_include_libestr.py")
# ----------------------------------------------

# ----------------------------------------------
####### SERVICES REPORTERS 
execfile(buildbotdir + "nogit_master_github.py")

# ----------------------------------------------
####### WWW INTERFACE
execfile(buildbotdir + "nogit_master_www.py")

####### PROJECT IDENTITY
#	pip install service_identity
# the 'title' string will appear at the top of this buildbot
# installation's html.WebStatus home page (linked to the
# 'titleURL') and is embedded in the title of the waterfall HTML page.

c['title'] = "rsyslog"
c['titleURL'] = "https://www.rsyslog.com"

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server (usually the html.WebStatus page) is visible. This
# typically uses the port number set in the Waterfall 'status' entry, but
# with an externally-visible host name which the buildbot cannot figure out
# without some help.

c['buildbotURL'] = "https://build.rsyslog.com/"

####### DB URL
c['db'] = {
	# This specifies what database buildbot uses to store its state.  You can leave
	# this at its default for all but the largest installations.
	'db_url' : "sqlite:///state.sqlite",
}

######## Docker support stuff
#	pip install docker-compose
#
